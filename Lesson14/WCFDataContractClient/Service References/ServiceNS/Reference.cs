//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFDataContractClient.ServiceNS {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DiskInfoResult", Namespace="http://schemas.datacontract.org/2004/07/WCFDataContractService")]
    [System.SerializableAttribute()]
    public partial class DiskInfoResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string freeSpaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string totalSpaceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string freeSpace {
            get {
                return this.freeSpaceField;
            }
            set {
                if ((object.ReferenceEquals(this.freeSpaceField, value) != true)) {
                    this.freeSpaceField = value;
                    this.RaisePropertyChanged("freeSpace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string totalSpace {
            get {
                return this.totalSpaceField;
            }
            set {
                if ((object.ReferenceEquals(this.totalSpaceField, value) != true)) {
                    this.totalSpaceField = value;
                    this.RaisePropertyChanged("totalSpace");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceNS.IMyDiskInfo")]
    public interface IMyDiskInfo {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyDiskInfo/DiskTotal1", ReplyAction="http://tempuri.org/IMyDiskInfo/DiskTotal1Response" ,Name="DiskTotal1")]
        WCFDataContractClient.ServiceNS.DiskInfoResult DiskTotal(string disk);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyDiskInfo/DiskTotal1", ReplyAction="http://tempuri.org/IMyDiskInfo/DiskTotal1Response")]
        System.Threading.Tasks.Task<WCFDataContractClient.ServiceNS.DiskInfoResult> DiskTotal1Async(string disk);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyDiskInfo/DiskTotal2", ReplyAction="http://tempuri.org/IMyDiskInfo/DiskTotal2Response",Name="DiskTotal2")]
        WCFDataContractClient.ServiceNS.DiskInfoResult DiskTotal(string disk, string disk1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyDiskInfo/DiskTotal2", ReplyAction="http://tempuri.org/IMyDiskInfo/DiskTotal2Response")]
        System.Threading.Tasks.Task<WCFDataContractClient.ServiceNS.DiskInfoResult> DiskTotal2Async(string disk, string disk1);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMyDiskInfoChannel : WCFDataContractClient.ServiceNS.IMyDiskInfo, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MyDiskInfoClient : System.ServiceModel.ClientBase<WCFDataContractClient.ServiceNS.IMyDiskInfo>, WCFDataContractClient.ServiceNS.IMyDiskInfo {
        
        public MyDiskInfoClient() {
        }
        
        public MyDiskInfoClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MyDiskInfoClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MyDiskInfoClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MyDiskInfoClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WCFDataContractClient.ServiceNS.DiskInfoResult DiskTotal(string disk) {
            return base.Channel.DiskTotal(disk);
        }
        
        public System.Threading.Tasks.Task<WCFDataContractClient.ServiceNS.DiskInfoResult> DiskTotal1Async(string disk) {
            return base.Channel.DiskTotal1Async(disk);
        }
        
        public WCFDataContractClient.ServiceNS.DiskInfoResult DiskTotal(string disk, string disk1) {
            return base.Channel.DiskTotal(disk, disk1);
        }
        
        public System.Threading.Tasks.Task<WCFDataContractClient.ServiceNS.DiskInfoResult> DiskTotal2Async(string disk, string disk1) {
            return base.Channel.DiskTotal2Async(disk, disk1);
        }
    }
}
